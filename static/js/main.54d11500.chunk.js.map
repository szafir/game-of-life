{"version":3,"sources":["components/Flexbox/Cell.js","components/Flexbox/Row.js","components/Flexbox/Panel.js","components/Position/Cell.js","components/Position/Panel.js","components/Canvas/Cell.js","components/Canvas/Panel.js","containers/withPanelState.js","actions/index.js","actions/actionTypes.js","formations/index.js","formations/formations.js","components/Toolbar.js","components/Header.js","containers/Page.js","App.js","reducers/golReducer.js","index.js"],"names":["withStyles","theme","cell","background","display","width","height","border","alive","props","classes","cellClass","react_default","a","createElement","className","join","row","justifyContent","alignItems","items","map","item","index","length","Flexbox_Cell","cellInd","key","concat","rowInd","Panel","_this","this","_this$props","cells","style","fieldWidth","fieldHeight","index_es","elevation","paper","square","Flexbox_Row","onCellClick","Component","margin","backgroundImage","position","transform","Position_Cell","Cell","x","cellSize","y","ReactKonva","fill","Canvas_Cell","withPanelState","WrappedComponent","PanelHOC","_Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","shouldRun","setTimeout","nextGeneration","connect","state","dispatch","type","changeCell","col","payload","labels","matrixes","label","matrix","push","src_formations","Toolbar","call","interval","formation","executeNextGeneration","executeClear","clearCells","executeRun","startExistence","executeFormationChange","event","setState","target","console","log","fillRandomly","fillFormation","ref","React","createRef","toolbar","button","variant","size","onClick","formationContainer","formationSelector","htmlFor","onChange","inputProps","name","id","formations","stopExistence","paddingTop","spacing","unit","paddingBottom","marginRight","top","minWidth","generationNo","alivedCells","cellsAmount","velocity","drawer","flexShrink","zIndex","drawerPaper","mixins","nestedListItem","paddingLeft","badge","right","pathname","Fragment","appBar","color","noWrap","component","NavLink","to","selected","badgeContent","showZero","max","toFixed","Page","components_Header","location","panelContainer","Route","exact","path","PanelPosition","PanelFlexbox","PanelCanvas","components_Toolbar","marginTop","withRouter","app","textAlign","containers_Page","initialState","generationHistory","i","j","initState","runGeneration","action","toConsumableArray","nbCount","reduce","prev","includes","slice","Date","getTime","history","currentDate","setSeconds","getSeconds","curr","calculateVelocity","objectSpread","reducer","undefined","_action$payload","Math","random","startX","ceil","startY","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","golReducer","applyMiddleware","thunk","ReactDOM","render","BrowserRouter","basename","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.54d11500.chunk.js","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  cell: {\n    background: \"#aaa\",\n    display: \"block\",\n    width: 9,\n    height: 9,\n    border: \"1px solid rgb(220, 220, 220)\",\n  },\n  alive: {\n    background: \"#fff\"\n  }\n});\n\nconst Cell = props => {\n  const { classes } = props;\n  const cellClass = [\n    classes.cell,\n    props.alive !== false ? classes.alive : null\n  ];\n\n  return <span className={cellClass.join(\" \")} />;\n}\nexport default withStyles(styles)(Cell);","import React from \"react\";\nimport Cell from \"./Cell\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  row: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"flex-start\"\n  }\n});\n\nconst Row = props => (\n  <div className={props.classes.row}>\n    {props.items.map((item, index) =>\n      index > 0 && index < props.items.length - 1 ? (\n        <Cell\n          cellInd={index}\n          alive={item}\n          key={`cell-flexbox-${props.rowInd}-${index}`}\n        />\n      ) : null\n    )}\n  </div>\n);\n\nexport default withStyles(styles)(Row);\n","import React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport { Paper } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  paper: {\n    margin: \"0px auto\",\n    background: \"#eee\",\n    backgroundImage: \"url(/images/cell_11x11.png)\"\n  },\n});\n\nclass Panel extends Component {\n\n  render() {\n    const { cells, classes } = this.props;\n    const style = {\n      width: this.props.fieldWidth,\n      height: this.props.fieldHeight\n    };\n    return (\n      <Paper elevation={2} className={classes.paper} square={true} style={style} >\n        {cells.map((row, index) => {\n          return index > 0 && index < cells.length - 1 ? (\n            <Row\n              items={row}\n              rowInd={index}\n              onCellClick={this.onCellClick}\n              key={`row-flexbox-${index}`}\n            />\n          ) : null;\n        })}\n      </Paper>\n    );\n  }\n}\nexport default withStyles(styles)(Panel);","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  cell: {\n    background: \"#aaa\",\n    display: \"block\",\n    width: 9,\n    height: 9,\n    border: \"1px solid rgb(220, 220, 220)\",\n    position: \"absolute\"\n  },\n  alive: {\n    background: \"#fff\"\n  }\n});\n\nconst Cell = props => {\n  const { classes } = props;\n  const cellClass = [classes.cell, props.alive !== false ? classes.alive : null];\n  const cellSize = 11;\n  const style = {\n    transform: `translate3d(${cellSize * (props.cellInd - 1)}px,${cellSize *\n      (props.rowInd - 1)}px, 0)`\n  };\n\n  return <span className={cellClass.join(' ')} style={style} />;\n};\nexport default withStyles(styles)(Cell);\n","import React from \"react\";\nimport Cell from \"./Cell\";\n\nimport { Paper } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  paper: {\n    margin: \"0px auto\",\n    background: \"#eee\",\n    backgroundImage: \"url(images/cell_11x11.png)\"\n  },\n});\n\nconst Panel = props => {\n  const { cells, classes } = props;\n  const style = {\n    width: props.fieldWidth,\n    height: props.fieldHeight\n  };\n  return (\n    <Paper elevation={2} className={classes.paper} square={true} style={style}>\n      {\n        cells.map((row, index) => {\n          return index > 0 && index < cells.length - 1 ? (\n            row.map((item, cellInd) =>\n              cellInd > 0 && cellInd < row.length - 1 && item ? (\n                <Cell\n                  cellInd={cellInd}\n                  rowInd={index}\n                  alive={item}\n                  key={`cell-positioned-${index}-${cellInd}`}\n                />\n              ) : null\n            )\n          ) : null;\n        })\n      }\n    </Paper>\n  );\n}\nexport default withStyles(styles)(Panel);\n","import React from \"react\";\nimport { Rect } from \"react-konva\";\n\nconst Cell = props => {\n    const x = (props.cellSize) * (props.cellInd - 1) + 1;\n    const y = (props.cellSize) * (props.rowInd - 1) + 1;\n    return (\n        props.alive ? <Rect\n            x={x}\n            y={y}\n            width={9}\n            height={9}\n            fill=\"#fff\"\n        /> : null\n    )\n}\nexport default Cell;","import React from \"react\";\nimport Cell from \"./Cell\";\n\nimport { Stage, Layer } from \"react-konva\";\nimport { Paper, withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  paper: {\n    margin: \"0px auto\",\n    background: \"#eee\",\n    backgroundImage: \"url(images/cell_11x11.png)\"\n  },\n});\n\nconst Panel = props => {\n  const { cells, classes } = props;\n  const style = {\n    width: props.fieldWidth,\n    height: props.fieldHeight\n  };\n  return (\n    <Paper elevation={2} className={classes.paper} square={true} style={style} >\n      <Stage width={props.fieldWidth} height={props.fieldHeight}>\n        <Layer>\n          {cells.map((row, index) => {\n            return index > 0 && index < cells.length - 1 ? (\n              row.map((cell, cellInd) => {\n                return <Cell rowInd={index} cellInd={cellInd} cellSize={props.cellSize} alive={cell} key={`cell-canvas-${index}-${cellInd}`} />\n              })) : null;\n          })}\n        </Layer>\n      </Stage>\n    </Paper>\n  )\n}\n\nexport default withStyles(styles)(Panel);\n\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions\";\n\nimport * as actionTypes from \"../actions/actionTypes\";\n\nconst withPanelState = WrappedComponent => {\n    class PanelHOC extends Component {\n        componentDidUpdate() {\n            if (this.props.shouldRun) {\n                setTimeout(() => {\n                    this.props.nextGeneration();\n                }, 10)\n            }\n        }\n\n        render() {\n            return (\n                <WrappedComponent {...this.props} />\n            )\n        }\n    }\n\n    const mapStateToProps = state => ({\n        cells: state.cells,\n        fieldWidth: state.fieldWidth,\n        fieldHeight: state.fieldHeight,\n        cellSize: state.cellSize,\n        shouldRun: state.shouldRun\n    });\n    const mapDispatchToProps = dispatch => ({\n        nextGeneration: () => dispatch(actions.nextGeneration()),\n        changeCell: (row, col) =>\n            dispatch({ type: actionTypes.CHANGE_CELL, payload: { row, col } })\n    });\n\n    return connect(mapStateToProps, mapDispatchToProps)(PanelHOC);\n}\n\nexport default withPanelState;","import * as actionTypes from \"./actionTypes\";\n\nexport const nextGeneration = () => ({\n  type: actionTypes.RUN_GENERATION\n});\n","export const RUN_GENERATION = \"RUN_GENERATION\";\nexport const CHANGE_CELL = \"CHANGE_CELL\";\nexport const CLEAR_CELLS = \"CLEAR_CELLS\";\nexport const FILL_RANDOMLY = \"FILL_RANDOMLY\";\nexport const START_EXISTENCE = \"START_EXISTENCE\";\nexport const STOP_EXISTENCE = \"STOP_EXISTENCE\";\nexport const FILL_FORMATION = \"FILL_FORMATION\";\n","import formations from \"./formations\";\nconst labels = [];\nconst matrixes = [];\n\nformations.map((item) => {\n    labels.push(item.label);\n    matrixes.push(item.matrix);\n})\n\nexport default {\n    labels,\n    matrixes\n}","const formations = [\n    {\n        label: \"Glider\",\n        matrix: [[false, false, true], [true, false, true], [false, true, true]]\n    },\n    {\n        label: \"Small Exploder\",\n        matrix: [[false, true, true, false], [true, true, false, true], [false, true, true, false]]\n    },\n    {\n        label: \"Exploder\",\n        matrix: [[true, false, true, false, true], [true, false, false, false, true], [true, false, false, false, true], [true, false, false, false, true], [true, false, true, false, true]]\n    },\n    {\n        label: \"10 Cell Row\",\n        matrix: [[true, true, true, true, true, true, true, true, true, true]]\n    },\n    {\n        label: \"Lightweight spaceship (LWSS)\",\n        matrix: [[false, true, true, true, true], [true, false, false, false, true], [false, false, false, false, true], [true, false, false, true, false]]\n    },\n    {\n        label: \"Ants\",\n        matrix: [[true, true, false, false, false, true, true, false, false, false, true, true, false, false, false, true, true, false, false, false, true, true, false, false, false, true, true, false, false],\n        [false, false, true, true, false, false, false, true, true, false, false, false, true, true, false, false, false, true, true, false, false, false, true, true, false, false, false, true, true],\n        [false, false, true, true, false, false, false, true, true, false, false, false, true, true, false, false, false, true, true, false, false, false, true, true, false, false, false, true, true],\n        [true, true, false, false, false, true, true, false, false, false, true, true, false, false, false, true, true, false, false, false, true, true, false, false, false, true, true, false, false]]\n    },\n\n    {\n        label: \"Puffer trian\",\n        matrix: [\n            [false, false, false, true, false],\n            [false, false, false, false, true],\n            [true, false, false, false, true],\n            [false, true, true, true, true],\n            [false, false, false, false, false],\n            [false, false, false, false, false],\n            [false, false, false, false, false],\n            [true, false, false, false, false],\n            [false, true, true, false, false],\n            [false, false, true, false, false],\n            [false, false, true, false, false],\n            [false, true, false, false, false],\n            [false, false, false, false, false],\n            [false, false, false, false, false],\n            [false, false, false, true, false],\n            [false, false, false, false, true],\n            [true, false, false, false, true],\n            [false, true, true, true, true]\n        ]\n    }\n];\n\nexport default formations;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions\";\nimport * as actionTypes from \"../actions/actionTypes\";\nimport { Button, Select, MenuItem, FormControl, InputLabel } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport formations from \"../formations\";\n\n\n\nconst styles = theme => ({\n  toolbar: {\n    paddingTop: theme.spacing.unit * 3,\n    paddingBottom: theme.spacing.unit * 3,\n    display: \"flex\",\n    justifyContent: \"flex-start\"\n  },\n  button: {\n    marginRight: theme.spacing.unit * 2\n  },\n  formationContainer: {\n    position: \"relative\"\n  },\n  formationSelector: {\n    position: \"absolute\",\n    top: theme.spacing.unit * -2,\n    minWidth: theme.spacing.unit * 12\n  }\n});\n\nclass Toolbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ref = React.createRef();\n  }\n  state = {\n    interval: 0,\n    formation: ''\n  };\n\n  componentDidMount() {\n    this.executeFormationChange({\n      target: {\n        value: 1\n      }\n    });\n  }\n  executeNextGeneration = () => {\n    this.props.nextGeneration();\n  };\n  executeClear = () => {\n    this.props.clearCells();\n  };\n  executeRun = () => {\n    this.props.startExistence();\n  };\n  executeFormationChange = (event) => {\n    this.setState({\n      formation: event.target.value\n    });\n    console.log('formation change')\n    if (event.target.value === '') {\n      this.props.clearCells();\n    }\n    else if (event.target.value === \"RAND\") {\n      this.props.fillRandomly();\n    }\n    else {\n      this.props.fillFormation({\n        formation: event.target.value\n      })\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.toolbar}>\n        <Button className={classes.button} variant=\"contained\" size=\"small\" onClick={this.executeNextGeneration}>Next generation</Button>\n        {this.state.interval ? (\n          <Button className={classes.button} variant=\"contained\" size=\"small\" onClick={this.executeRun}>Stop</Button>\n        ) : (\n            <Button className={classes.button} variant=\"contained\" size=\"small\" onClick={this.executeRun}>{this.props.shouldRun ? \"Stop\" : \"Run\"} </Button>\n          )}\n        <Button className={classes.button} variant=\"contained\" size=\"small\" onClick={this.executeClear}>Clear</Button>\n        <div className={classes.formationContainer}>\n          <FormControl className={classes.formationSelector}>\n            <InputLabel htmlFor=\"formation\">Formation</InputLabel>\n            <Select\n              value={this.state.formation}\n              onChange={this.executeFormationChange}\n              ref={this.ref}\n              inputProps={{\n                name: 'formation',\n                id: 'formation',\n              }}\n            >\n              <MenuItem value=\"\">None</MenuItem>\n              {formations.labels.map((item, key) => <MenuItem value={key} key={`formationmenu-${key}`}>{item}</MenuItem>)}\n              <MenuItem value=\"RAND\">Random</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  shouldRun: state.shouldRun\n});\nconst mapDispatchToProps = dispatch => ({\n  nextGeneration: () => dispatch(actions.nextGeneration()),\n  clearCells: () => dispatch({ type: actionTypes.CLEAR_CELLS }),\n  startExistence: () => dispatch({ type: actionTypes.START_EXISTENCE }),\n  stopExistence: () => dispatch({ type: actionTypes.STOP_EXISTENCE }),\n  fillRandomly: () => dispatch({ type: actionTypes.FILL_RANDOMLY }),\n  fillFormation: (payload) => dispatch({ type: actionTypes.FILL_FORMATION, payload })\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Toolbar));\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  List, ListItem, ListItemText, Drawer, Divider, AppBar, Toolbar, Typography, Badge\n} from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\n\nconst drawerWidth = 220;\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    zIndex: 1000\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n  nestedListItem: {\n    paddingLeft: theme.spacing.unit * 4,\n  },\n  badge: {\n    top: \"50%\",\n    right: theme.spacing.unit * -0.5\n  }\n});\n\nconst Header = (props) => {\n  const { classes, pathname } = props;\n  return (\n    <>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Game of life\n          </Typography>\n\n        </Toolbar>\n      </AppBar>\n      <Drawer variant=\"permanent\" className={classes.drawer}>\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>\n          <ListItem button component={NavLink} to=\"/\" selected={pathname === \"/\"} >\n            <ListItemText>Position implementation</ListItemText>\n          </ListItem>\n          <ListItem button component={NavLink} to=\"/flexbox\" selected={pathname === \"/flexbox\"}>\n            <ListItemText>Flexbox implementation</ListItemText>\n          </ListItem>\n          <ListItem button component={NavLink} to=\"/canvas\" selected={pathname === \"/canvas\"}>\n            <ListItemText>Canvas implementation</ListItemText>\n          </ListItem>\n          <Divider />\n          <ListItem >\n            <ListItemText>Statistics:</ListItemText>\n          </ListItem>\n          <ListItem className={classes.nestedListItem} >\n            <Badge badgeContent={props.generationNo} showZero={true} max={9999} color=\"primary\" classes={{ badge: classes.badge }}>\n              <ListItemText>Generation no</ListItemText>\n            </Badge>\n          </ListItem>\n          <ListItem className={classes.nestedListItem} >\n            <Badge badgeContent={props.alivedCells} max={999} color=\"primary\" classes={{ badge: classes.badge }}>\n              <ListItemText>Alived cells</ListItemText>\n            </Badge>\n          </ListItem>\n          <ListItem className={classes.nestedListItem} >\n            <Badge badgeContent={props.cellsAmount} max={9999} color=\"primary\" classes={{ badge: classes.badge }}>\n              <ListItemText>Cells amount</ListItemText>\n            </Badge>\n          </ListItem>\n          <ListItem className={classes.nestedListItem} >\n            <Badge badgeContent={props.velocity} showZero={true} color=\"primary\" classes={{ badge: classes.badge }}>\n              <ListItemText>Velocity</ListItemText>\n            </Badge>\n          </ListItem>\n          <ListItem className={classes.nestedListItem} >\n            <Badge badgeContent={(props.velocity / props.alivedCells).toFixed(3)} showZero={true} max={9999} color=\"primary\" classes={{ badge: classes.badge }}>\n              <ListItemText>Normalized velocity</ListItemText>\n            </Badge>\n          </ListItem>\n        </List>\n      </Drawer>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  generationNo: state.generationNo,\n  alivedCells: state.alivedCells,\n  cellsAmount: state.cellsAmount,\n  velocity: state.velocity,\n})\nexport default connect(mapStateToProps, null)(withStyles(styles)(Header));\n","import React, { Component } from \"react\";\nimport { Route, withRouter } from \"react-router-dom\";\n\nimport PanelFlexbox from \"../components/Flexbox/Panel\";\nimport PanelPosition from \"../components/Position/Panel\";\nimport PanelCanvas from \"../components/Canvas/Panel\";\nimport withPanelState from \"./withPanelState\";\n\nimport Toolbar from \"../components/Toolbar\";\nimport Header from \"../components/Header\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  panelContainer: {\n    marginTop: theme.spacing.unit * 12\n  }\n});\n\nclass Page extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <Header pathname={this.props.location.pathname} />\n        <div className={classes.panelContainer}>\n          <Route exact path=\"/\" component={withPanelState(PanelPosition)} />\n          <Route path=\"/flexbox\" component={withPanelState(PanelFlexbox)} />\n          <Route path=\"/canvas\" component={withPanelState(PanelCanvas)} />\n          <Toolbar />\n        </div>\n      </>\n    );\n  }\n}\nexport default withStyles(styles)(withRouter(Page));","import React from \"react\";\nimport Page from \"./containers/Page\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\n\nconst styles = theme => ({\n  app: {\n    textAlign: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  }\n})\n\nconst App = props => {\n  return (\n    <div className={props.classes.app}>\n      <Page />\n    </div>\n  )\n}\nexport default withStyles(styles)(App);\n","import * as actionTypes from \"../actions/actionTypes\";\nimport formations from \"../formations\";\n\nconst initState = () => {\n  const amountX = 80;\n  const amountY = 50;\n  const cellSize = 11;\n  const initialState = {\n    cells: [],\n    generationNo: 0,\n    alivedCells: 0,\n    cellsAmount: 0,\n    fieldWidth: (amountX - 1) * cellSize,\n    fieldHeight: (amountY - 1) * cellSize,\n    cellSize,\n    generationHistory: [],\n    velocity: 0,\n    shouldRun: false\n  };\n\n  for (let i = 0; i <= amountY; i++) {\n    initialState.cells[i] = [];\n    for (let j = 0; j <= amountX; j++) {\n      initialState.cells[i][j] = false;\n    }\n  }\n  initialState.cellsAmount = (initialState.cells.length - 2) * (initialState.cells[1].length - 2);\n  return initialState;\n}\n\nconst initialState = initState();\n\nconst calculateVelocity = (history) => {\n  let currentDate = new Date();\n  currentDate.setSeconds(currentDate.getSeconds() - 2);\n  let velocity = history.reduce((prev, curr) => {\n    return currentDate.getTime() < curr ? (prev + 1) : prev;\n  }, 0)\n  return (velocity / 2).toFixed(1);\n}\n\nconst runGeneration = (state, action) => {\n  let alivedCells = 0;\n  let cells = state.cells.map(item => [...item]);\n  for (let i = 1; i < state.cells.length - 1; i++) {\n    for (let j = 1; j < state.cells[i].length - 1; j++) {\n      const nb = [\n        state.cells[i - 1][j - 1],\n        state.cells[i - 1][j],\n        state.cells[i - 1][j + 1],\n        state.cells[i][j - 1],\n        state.cells[i][j + 1],\n        state.cells[i + 1][j - 1],\n        state.cells[i + 1][j],\n        state.cells[i + 1][j + 1]\n      ];\n\n      const nbCount = nb.reduce((prev, item) => prev + (item ? 1 : 0), 0);\n\n      cells[i][j] =\n        (state.cells[i][j] && [2, 3].includes(nbCount)) ||\n        (!state.cells[i][j] && nbCount === 3);\n      alivedCells = cells[i][j] ? alivedCells + 1 : alivedCells;\n    }\n  }\n  const generationHistory = state.generationHistory.slice(state.generationHistory.length - 500);\n  generationHistory.push(new Date().getTime());\n  const velocity = calculateVelocity(generationHistory);\n  return {\n    ...state,\n    generationNo: ++state.generationNo,\n    alivedCells,\n    cells,\n    generationHistory,\n    velocity\n  };\n}\n\nconst changeCell = (state, action) => {\n  let cells = state.cells.map(item => [...item]);\n  const { row, col } = action.payload;\n  cells[row][col] = !cells[row][col];\n\n  return {\n    ...state,\n    alivedCells: cells[row][col]\n      ? state.alivedCells + 1\n      : state.alivedCells,\n    cells\n  };\n}\n\nconst clearCells = (state, action) => {\n  const cells = initialState.cells.map(item => [...item]);\n  return {\n    ...state,\n    generationNo: 0,\n    alivedCells: 0,\n    cells\n  };\n}\n\nconst fillRandomly = (state, action) => {\n  const cells = initialState.cells.map(item => [...item]);\n  let alivedCells = 0;\n  for (let i = 1; i < state.cells.length - 1; i++) {\n    for (let j = 1; j < state.cells[i].length; j++) {\n      cells[i][j] = Math.random() > 0.9;\n      alivedCells = cells[i][j] ? alivedCells + 1 : alivedCells;\n    }\n  }\n  return {\n    ...state,\n    generationNo: 0,\n    alivedCells,\n    cells\n  };\n}\n\nconst fillFormation = (state, action) => {\n  const cells = initialState.cells.map(item => [...item]);\n  const formation = formations.matrixes[action.payload.formation];\n  let startX = Math.ceil(cells.length / 2) - Math.ceil(formation.length / 2);\n  let startY = Math.ceil(cells[0].length / 2) - Math.ceil(formation[0].length / 2);\n  for (let i = startX; i < startX + formation.length; i++) {\n    for (let j = startY; j < startY + formation[0].length; j++) {\n      cells[i][j] = formation[i - startX][j - startY];\n    }\n  }\n  return {\n    ...state,\n    cells\n  }\n}\n\nconst startExistence = (state, action) => {\n  return {\n    ...state,\n    shouldRun: !state.shouldRun\n  }\n}\nconst stopExistence = (state, action) => {\n  return {\n    ...state,\n    shouldRun: false\n  }\n}\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.RUN_GENERATION: return runGeneration(state, action);\n    case actionTypes.CHANGE_CELL: return changeCell(state, action);\n    case actionTypes.CLEAR_CELLS: return clearCells(state, action);\n    case actionTypes.FILL_RANDOMLY: return fillRandomly(state, action);\n    case actionTypes.START_EXISTENCE: return startExistence(state, action);\n    case actionTypes.STOP_EXISTENCE: return stopExistence(state, action);\n    case actionTypes.FILL_FORMATION: return fillFormation(state, action);\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport golReducer from \"./reducers/golReducer\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n// import invariant from \"redux-immutable-state-invariant\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  golReducer,\n  composeEnhancers(applyMiddleware(thunk /*, invariant()*/))\n);\n\nReactDOM.render(\n  <BrowserRouter basename=\"/game-of-life\">\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}